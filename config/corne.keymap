/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        BTCLR {
            bindings = <&bt BT_CLR>;
            key-positions = <0 5 38>;
        };

        colemak {
            bindings = <&to 0>;
            key-positions = <5 6 39>;
        };

        qwerty {
            bindings = <&to 1>;
            key-positions = <5 6 38>;
        };

        fn {
            bindings = <&mo 0>;
            key-positions = <36 41>;
        };

        escq {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        escr {
            bindings = <&kp ESCAPE>;
            key-positions = <10 11>;
        };

        capsw {
            bindings = <&caps_word>;
            key-positions = <17 18>;
        };
    };

    behaviors {
        homerow: homerow {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        backspace_delete: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak-dh {
            bindings = <
&kp TAB         &kp Q  &kp W  &kp F         &kp P  &kp B                      &kp J                   &kp L  &kp U          &kp Y    &kp SEMICOLON  &backspace_delete
&kp LEFT_SHIFT  &kp A  &kp R  &kp S         &kp T  &kp G                      &kp H                   &kp N  &kp E          &kp I    &kp O          &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp D  &kp V                      &kp K                   &kp M  &kp COMMA      &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                              &kp LEFT_GUI  &mo 2  &homerow LEFT_ALT SPACE    &homerow RIGHT_ALT RET  &mo 5  &kp RIGHT_GUI
            >;
        };

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1     &kp N2     &kp N3        &kp N4        &kp N5       &kp N6     &kp N7    &kp N8     &kp N9     &kp N0     &trans
&trans  &trans     &trans     &kp LEFT_GUI  &kp LEFT_ALT  &trans       &kp MINUS  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &trans
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)     &none         &kp LC(V)    &kp PLUS   &kp END   &kp PG_DN  &kp PG_UP  &kp HOME   &trans
                              &trans        &trans        &trans       &trans     &kp N0    &trans
            >;
        };

        sym {
            bindings = <
&trans  &kp SINGLE_QUOTE  &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD    &kp AMPERSAND  &kp SEMICOLON  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT           &trans
&trans  &kp EXCL          &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH      &kp PIPE       &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION          &trans
&trans  &kp CARET         &kp SLASH      &kp STAR          &kp BACKSLASH      &trans        &kp TILDE      &kp DOLLAR     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LS(SINGLE_QUOTE)  &trans
                                         &trans            &trans             &trans        &trans         &kp N0         &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &trans        &trans        &trans  &trans    &trans     &kp END   &kp PAGE_DOWN  &kp PG_UP  &kp HOME   &trans
&trans  &trans  &kp LEFT_ALT  &kp LEFT_GUI  &trans  &trans    &trans     &kp LEFT  &kp DOWN       &kp UP     &kp RIGHT  &trans
&trans  &trans  &trans        &trans        &trans  &trans    &kp RC(V)  &kp H     &kp J          &kp K      &kp L      &trans
                              &trans        &trans  &trans    &trans     &trans    &trans
            >;
        };

        fn {
            bindings = <
&trans  &kp C_VOLUME_UP    &kp K_MUTE    &trans        &kp LEFT_ALT  &kp PRINTSCREEN    &kp F7             &kp F9  &kp F10  &kp F11  &kp F12  &trans
&trans  &kp C_VOLUME_DOWN  &kp F9        &kp F10       &kp F11       &kp F12            &ext_power EP_TOG  &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &bt BT_SEL 0       &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &trans             &kp F1  &kp F2   &kp F3   &kp F4   &trans
                                         &trans        &trans        &trans             &trans             &trans  &trans
            >;
        };

        hyprland {
            bindings = <
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &kp HOME      &kp PAGE_DOWN  &kp PAGE_UP  &kp END        &trans  &trans
&trans  &kp LG(A)         &kp LG(S)         &kp LG(D)         &kp LG(F)         &kp LG(G)           &kp LG(LEFT)  &kp LG(DOWN)   &kp LG(UP)   &kp LG(RIGHT)  &trans  &trans
&trans  &kp LG(Q)         &trans            &kp LG(C)         &kp LG(V)         &kp LG(R)           &trans        &trans         &trans       &trans         &trans  &trans
                                            &trans            &trans            &trans              &trans        &trans         &trans
            >;
        };
    };
};
