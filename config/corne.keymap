/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        BTCLR {
            bindings = <&bt BT_CLR>;
            key-positions = <0 5 38>;
        };

        colemak {
            bindings = <&to 1>;
            key-positions = <5 6 39>;
        };

        qwerty {
            bindings = <&to 0>;
            key-positions = <5 6 38>;
        };

        fn {
            bindings = <&to 5>;
            key-positions = <24 35 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp E  &kp R  &kp T                   &kp Y                &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp TAB     &kp A  &kp S  &kp D  &kp F  &kp G                   &kp H                &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C  &kp V  &kp B                   &kp N                &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                          &mo 4  &mo 2  &mt LEFT_SHIFT SPACE    &mt RIGHT_SHIFT RET  &mo 3  &kp RALT
            >;
        };

        colemak-dh {
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp F  &kp P  &kp B                   &kp J                &kp L  &kp U      &kp Y    &kp SEMICOLON  &kp BSPC
&kp TAB     &kp A  &kp R  &kp S  &kp T  &kp G                   &kp M                &kp N  &kp E      &kp I    &kp O          &kp SQT
&kp LCTRL   &kp Z  &kp X  &kp C  &kp D  &kp V                   &kp K                &kp H  &kp COMMA  &kp DOT  &kp FSLH       &kp RCTRL
                          &mo 4  &mo 2  &mt SPACE LEFT_SHIFT    &mt RET RIGHT_SHIFT  &mo 3  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &trans
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        hyprland {
            bindings = <
&trans          &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
&kp LEFT_SHIFT  &kp LG(A)         &kp LG(S)         &kp LG(D)         &kp LG(F)         &kp LG(G)           &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&kp LCTRL       &trans            &trans            &kp LG(C)         &kp LG(V)         &kp LG(R)           &trans    &trans         &trans       &trans     &trans  &trans
                                                    &kp LEFT_GUI      &kp LEFT_ALT      &trans              &trans    &trans         &trans
            >;
        };

        fn {
            bindings = <
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6          &kp F7             &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp F7  &kp F8        &kp F9        &kp F10       &kp F11       &kp F12         &ext_power EP_TOG  &trans  &trans  &trans   &trans   &trans
&to 1   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans             &trans  &trans  &trans   &trans   &trans
                                    &trans        &trans        &trans          &trans             &trans  &trans
            >;
        };
    };
};
